name: release

on:
  workflow_dispatch:
  pull_request:
    types:
      - closed
    branches:
      - main

permissions:
  contents: write

jobs:
  check-version:
    if: ${{ github.event.pull_request.merged || github.event_name == 'workflow_dispatch' }}
    runs-on: ubuntu-latest
    outputs:
      upgrade: ${{ steps.check.outputs.UPGRADE }}
      version: ${{ steps.check.outputs.VERSION }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2
      - name: check if version changed
        run: |
          export VERSION=$(python -c "from core.__version__ import __version__; print(__version__)")
          export VERSION_LINE_OID=$(git blame core/__version__.py --root -l | grep "VERSION = " | cut -c 1-40)
          export HEAD_OID=$(git log -1 --format='%H')
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT;
          if [ "$VERSION_LINE_OID" == "$HEAD_OID" ]; then echo "UPGRADE=1" >> $GITHUB_OUTPUT; fi
        id: check

  release:
    runs-on: ubuntu-latest
    needs: [check-version, windows-package, package]
    if: ${{ needs.check-version.outputs.upgrade == '1' }}
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 1
      - name: download artifact
        uses: actions/download-artifact@v4
        with:
          pattern: habitat-*
          merge-multiple: true
      - name: release
        uses: ncipollo/release-action@v1
        if: ${{ needs.check-version.outputs.upgrade == '1' || github.event_name == 'workflow_dispatch' }}
        with:
          name: ${{ needs.check-version.outputs.version }}
          tag: ${{ needs.check-version.outputs.version }}
          token: ${{ secrets.GITHUB_TOKEN }}
          replacesArtifacts: false
          artifacts: hab.pex,bin/hab,hab.exe,bin/hab.ps1

  windows-package:
    runs-on: windows-latest
    needs: check-version
    if: ${{ needs.check-version.outputs.upgrade == '1' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: package
        run: |
          pip install -e .[dev]
          .\package.ps1
      - name: upload windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: habitat-windows-artifact
          path: .\dist\hab.exe

  package:
    runs-on: ubuntu-latest
    needs: check-version
    if: ${{ needs.check-version.outputs.upgrade == '1' }}
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.9"
      - name: package
        run: |
          make install_dev
          make package
      - name: upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: habitat-artifact
          path: hab.pex
